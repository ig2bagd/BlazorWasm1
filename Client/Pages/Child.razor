<p>
    <p>Message from parent: @messageFromParent</p>

    <button @onclick="GetMessageFromParent">Send Parameter to Parent</button>
</p>
<hr />
<p>
    <strong>Title:</strong> @Title
    <br/>
    <button @onclick="OnClickCallback">
        Trigger a Parent component method
    </button>
    <br />
    <strong>RenderFragment:</strong> @ChildContent
</p>

<p>
    <label>
        Count of '+' key presses:
        <input value="@count" @onkeydown="KeyHandler" @onkeydown:preventDefault />
    </label>
</p>

@code {
    #region Send Parameter to & Receive Value from Parent
    [Parameter]
    public Func<string, string> GetMessage { get; set; }

    private string messageFromParent;

    private void GetMessageFromParent()
    {
        // Define the parameter to send to the parent
        string parameter = "Hello from Child!";

        // Call the parent's function, pass the parameter, and store the returned value
        messageFromParent = GetMessage?.Invoke(parameter);
    }
    #endregion

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnClickCallback { get; set; }

    private int count = 0;

    private void KeyHandler(KeyboardEventArgs e)
    {
        if (e.Key == "+")
        {
            count++;
        }
    }
}
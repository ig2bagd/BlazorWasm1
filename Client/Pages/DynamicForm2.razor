@page "/dynamicform2"

<button @onclick="CreateComponent">Create Component</button>

@foreach (var component in components)
{
    <DynamicComponent Type="@typeof(FormTmplate)" Parameters="@component.Parameters" />
}

@code {
    private List<ComponentModel> components = new List<ComponentModel>();

    int idx = 1;
    private void CreateComponent()
    {
        var componentModel = new ComponentModel();
        componentModel = new ComponentModel
        {
            Parameters = new Dictionary<string, object>
            {
                { "Title", $"Dynamic Title #{idx}" },
                { "Description", "This is a dynamic description" },
                { "OnClose", EventCallback.Factory.Create(this, () => RemoveComponent(componentModel)) },
                { "MyMethod", (Action)SomeMethod },
                { "MyFunction", (Func<int, int, string, string>)SomeMethod2 },
                { "OnButtonClick", EventCallback.Factory.Create(this, HandleButtonClick) }
            }
        };

        components.Add(componentModel);
        idx++;
    }


    private void RemoveComponent(ComponentModel component)
    {
        components.Remove(component);
        // StateHasChanged();
    }

    private void SomeMethod()
    {
        Console.WriteLine("Method executed from the parent component!");
    }

    private string SomeMethod2(int a, int b, string c)
    {
        return $"Sum: {a + b}, String: {c}";
    }

    private void HandleButtonClick()
    {
        Console.WriteLine("Event triggered from the child component!");
    }

    private class ComponentModel
    {
        public Dictionary<string, object> Parameters { get; set; }
    }
}
